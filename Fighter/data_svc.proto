syntax = "proto3";
package datasvc;
option go_package = "../gateway/data_svc";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "common.proto";

service DataProvider {
  rpc GetStatus(google.protobuf.Empty) returns (GetStatusReply) {
        option(google.api.http) = {
            get: "/data/getStatus"
        };
  }
  rpc ListData(google.protobuf.Empty) returns (ListDataReply) {
        option(google.api.http) = {
            get: "/data/listData"
        };
  }
  rpc UploadData(stream UploadRequest) returns (UploadReply) {
        option(google.api.http) = {
            post: "/data/uploadData"
            body: "*"
        };
  }
  rpc BatchUpload(stream UploadRequest) returns (stream UploadReply) {
  	option(google.api.http) = {
	    post: "/data/batchUpload"
	    body: "*"
	};
  }
  rpc DownloadData(DownloadRequest) returns (stream DownloadReply) {
        option(google.api.http) = {
	    post: "/data/downLoadData"
	    body: "*"
	};
  }
  rpc DeleteData(DownloadRequest) returns (UploadReply) {}

  rpc SendSharesData(SendSharesDataRequest) returns (SendSharesDataReply) {}

  rpc HandleTaskReadyGo(common.TaskReadyGoReq) returns (common.TaskReadyGoReply) {
        option(google.api.http) = {
        post: "/data/handleTaskReadyGo"
        body: "*"
    };
  }

  rpc HandleCancelTask(common.TaskCancelReq) returns (common.TaskCancelReply) {
        option(google.api.http) = {
        post: "/data/handleCancelTask"
        body: "*"
    };
  }
}

message DownloadRequest {
  string file_path = 1;
}

enum TaskStatus {
  Start = 0;
  Finished = 1;
  Cancelled = 2;
  Failed = 3;
}

message DownloadReply {
  oneof data {
    TaskStatus status = 1;
    bytes content = 2;
  }
}

message FileInfo {
  string file_name = 1;
  string file_type = 2;
  string description = 3;
  repeated string columns = 4;
  repeated string col_dtypes = 5;
  repeated string keywords = 6;
}

message UploadRequest {
  oneof data {
    FileInfo meta = 1;
    bytes content = 2;
  }
}

message UploadReply {
  bool ok = 1;
  string data_id = 2;
  string file_path = 3;
}

message ListDataReply {
  message Row {
    string data_id = 1;
    string info = 2;
    string file_name = 3;
    int32 size = 4;
  }
  repeated Row data = 1;
}

message GetDataDetailReply {
  message Item {
    string column = 1;
    string dtype = 2;
  }
  int32 n_rows = 1;
  repeated Item items = 2;
}

message GetStatusReply {
  string node_type = 1;
  string node_id = 2;
  string state = 3;
  message Info {
    string total_cpu = 1;
    string used_cpu = 2;
    string idle_cpu = 3;
    string total_memory = 4;
    string used_memory = 5;
    string idle_memory = 6;
    string total_disk = 7;
    string used_disk = 8;
    string idle_disk = 9;
    string total_bandwidth = 10;
    string used_bandwidth = 11;
    string idle_bandwidth = 12;
  }
  Info info = 4;
}

message SendSharesDataRequest {
  string data_id = 1;
  repeated string receivers = 2;
}

message SendSharesDataReply {
  TaskStatus status = 1;
}
